{"version":3,"file":"static/js/HomePage.2e9086b1.chunk.js","mappings":"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","sources":["components/TrendingFilms/FilmsList.styled.js","components/TrendingFilms/FilmsList.jsx","hooks/useFetchMovies.js","pages/HomePage/HomePage.jsx","servises/moviesApi.js","servises/notify.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link} from \"react-router-dom\";\nexport const Container = styled.main`\ntext-align:center;\n`\nexport const Title = styled.h2`\nfont-size:35px;\nfont-family: 'Permanent Marker', cursive;\nfont-weight:400;\ncolor: #fc7b03;\n\n`\nexport const List = styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngrid-column-gap: 10px;\ngrid-row-gap: 1em;\n\n`\nexport const Links = styled(Link)`\ndisplay: flex;\nflex-direction:column;\nalign-items: center;\njustify-content:center;\ncolor: #e170a9;\nfont-size:24px;\ntext-decoration-line:none;\nfont-weight:600;\nbox-shadow: 0px 0px 23px 0px #FFA322;\n&:not(:last-child){\n    margin-bottom:15px;\n}\n&:hover{\n    text-decoration-line: underline;\n    color: #df1d7f;\n}\n`\nexport const Item = styled.li`\ndisplay: flex;\nflex-direction: column;\nfont-size:35px;\nfont-family: 'Dancing Script', cursive;\nfont-weight:400;\nlist-style:none;\n`\nexport const Poster = styled.div`\nwidth: 300px;\nheight: 450px;\nmargin-bottom:10px;\npadding-top: 10px;\n`\nexport const MoviesTitle = styled.p`\nheight: 60px;\npadding: 5px;\n`","import PropTypes from 'prop-types';\nimport { Container, List, Title, Poster, Item, Links, MoviesTitle } from \"./FilmsList.styled\";\nimport image from \"../../Images/noPoster.jpg\"\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\nexport const TrendingFilms = ({ movies, title, location, to }) => {\n    const getLabel = () => {\n        const labelText = to === \"\" ? \"Back movies page\":\"Back home page\";\n        return labelText \n    }\n    return (\n        <Container >\n            {title&&<Title>{title}</Title>}\n            <List>\n                {movies.map(movie => <Item key={movie.id}>\n                    <Links to={`${to}${movie.id}`} state={{ from: { location, label: getLabel()}} }>\n                        <Poster>\n                            {movie.poster_path ? (<img src={`${imgBaseUrl}${movie.poster_path}`} alt={movie.title} />) :\n                            <img src={`${image}`} alt='no poster'/>} \n                        </Poster>\n                        <MoviesTitle>{movie.title}</MoviesTitle>\n                    </Links>\n                </Item> )}\n            </List>       \n        </Container >\n    )\n}\n\nTrendingFilms.propTypes = {\n    movies: PropTypes.array.isRequired,\n    title: PropTypes.string,\n    location:PropTypes.object.isRequired,\n    to:PropTypes.string,\n}","import { useState, useEffect } from \"react\"\nimport { fetchMovies } from \"servises/moviesApi\"\nimport { notifi } from \"servises/notify\";\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport const useFetchMovies = () => {\n    const [movies, setMovies] = useState([])\n    const [status, setStatus] = useState('');\n    useEffect(() => {\n        setStatus(Status.PENDING);\n        async function fetch() {\n            try {\n                const movies = await fetchMovies();\n                setMovies(movies);\n                setStatus(Status.RESOLVED);\n            }\n            catch (error) {\n                setStatus(Status.REJECTED);\n                console.log(error.message);\n                notifi(error.message);\n            }\n        }\n        fetch();\n    }, []);\n\n    return { movies, status };\n};","import { useLocation } from \"react-router-dom\";\nimport { TrendingFilms } from \"components/TrendingFilms/FilmsList\"\nimport { useFetchMovies } from \"hooks/useFetchMovies\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { NoFetchResults } from \"components/NoFetchResults/NoFetchResults\";\nexport default function HomePage () {\n    const { movies, status } = useFetchMovies();\n    const location = useLocation();\n   \n    return (<>\n        {status === 'pending' && <Loader />}\n        {status === 'resolved' && <TrendingFilms location={location} movies={movies} title='Trendind today' to='movies/'/>}\n        {status === 'rejected' && <NoFetchResults text={\"Sorry can't find this page:(\"}/>}\n        </>  \n    );\n}\n\n","import axios from \"axios\";\n\nexport const fetchMovies = async () => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data.results\n  } catch (error) {\n   console.log('error', error) \n  }\n}\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)\n  }\n}\n\nexport const fetchReviewsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\nexport const fetchCastsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\nexport const fetchMoviesByQuery = async (query) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=4a5a1e8e9c9af768c9d74bb009ae596f&query=${query}`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n// https://api.themoviedb.org/3/movie/550?api_key=4a5a1e8e9c9af768c9d74bb009ae596f","import { toast } from 'react-toastify';\nexport const notifi = (text) => toast.error(text, {\n    autoClose: 3000,\n});"],"names":["Container","styled","Title","List","Links","Link","Item","Poster","MoviesTitle","TrendingFilms","movies","title","location","to","map","movie","id","state","from","label","poster_path","src","alt","image","Status","HomePage","useState","setMovies","status","setStatus","useEffect","fetchMovies","console","log","message","notifi","fetch","useFetchMovies","useLocation","Loader","NoFetchResults","text","axios","data","results","fetchMoviesById","fetchReviewsById","fetchCastsById","fetchMoviesByQuery","query","toast","autoClose"],"sourceRoot":""}