{"version":3,"file":"static/js/548.502e2c61.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","hooks/useFetchMovie.js","components/Movie/Movie.styled.js","components/Movie/Movie.jsx","components/AdittionalInfo/AdittionalInfo.styled.js","components/AdittionalInfo/AdittionalInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","servises/moviesApi.js","servises/notify.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Image = styled.div`\ndisplay:flex;\njustify-content:center;\ntext-align:center;\n&:after {\n  content: \" \";\n  display: block;\n  width: 94px;\n  height: 94px;\n  margin: 8px;\n  border-radius: 50%;\n  border: 6px solid #fff;\n  border-color: #fc7b03 transparent #fc7b03 transparent;\n  animation: lds-dual-ring 1.2s linear infinite;\n}\n@keyframes lds-dual-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n`","import {Image} from \"./Loader.styled\"\n\nexport const Loader = () => {\n    return (\n   <Image></Image>\n)\n}","import { useState, useEffect } from \"react\"\nimport { fetchMoviesById } from \"servises/moviesApi\"\nimport { notifi } from \"servises/notify\";\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport const useFetchMovie = (id) => {\n    const [movie, setMovie] = useState([])\n    const [status, setStatus] = useState('');\n    useEffect(() => {\n        setStatus(Status.PENDING);\n        async function fetch() {\n            try {\n                const movie = await fetchMoviesById(id);\n                setMovie(movie);\n                setStatus(Status.RESOLVED);\n            }\n            catch (error) {\n                setStatus(Status.REJECTED);\n                console.log(error.message);\n                notifi(error.message);\n            }\n        }\n        fetch();\n    }, [id]);\n\n    return { movie, status };\n};","import styled from \"@emotion/styled\";\nimport { MdKeyboardReturn } from 'react-icons/md';\nexport const Btn = styled.button`\nborder: none;\nbackground-color: transparent;\ncursor: pointer;\n`\nexport const GoBack = styled(MdKeyboardReturn)`\nwidth: 60px;\nheight: 30px;\ncolor: #fc7b03;\n`\nexport const FilmContainer = styled.div`\ndisplay:flex;\n`\nexport const FilmDescription = styled.div`\nmargin-left:30px;\npadding: 15px;\nbox-shadow: 0px 0px 17px 0px rgba(255,185,43,0.66);\nwidth: 85vw;\n`\nexport const Poster = styled.img`\nwidth: 18vw;\nbox-shadow: 0px 0px 17px 0px rgba(255,185,43,0.66);\n`\nexport const Title = styled.h2`\nfont-size:35px;\nfont-family: 'Permanent Marker', cursive;\nfont-weight:400;\ncolor: #fc7b03;\ntext-decoration:underline;\nmargin-top:0;\n`\nexport const SubTitle = styled.h3`\nfont-size:21px;\nfont-family: 'Permanent Marker', cursive;\nfont-weight:400;\ncolor: #fc7b03;\n`\nexport const Text = styled.p`\nfont-size:16px;\nfont-family: 'Work Sans', sans-serif;\nfont-weight:400;\ncolor: #ca7628;\nfont-weight: 700;\nwidth: 50vw;\n`\nexport const GenresList = styled.span`\ndisplay: block;\nfont-size:16px;\nfont-family: 'Work Sans', sans-serif;\nfont-weight:400;\ncolor: #ca7628;\nfont-weight: 700;\n`\n","import PropTypes from 'prop-types';\nimport { FilmContainer, GoBack, Btn, FilmDescription, Poster, Title, SubTitle, Text, GenresList } from \"./Movie.styled\";\nimport image from \"../../Images/noPoster.jpg\"\n\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n\nexport const Movie = ({ movie, onBackClick }) => {\n    const { title, poster_path, genres, overview, vote_average} = movie;\n    return (\n        <div>\n            <Btn type='button'onClick={onBackClick} ><GoBack  /></Btn>\n            <FilmContainer >\n               {poster_path? (<Poster  src={`${imgBaseUrl}${poster_path}`} alt={title} />):(<Poster src={`${image}`} alt='no poster'/>) }\n                    <FilmDescription>\n                        <Title>{title}</Title>\n                        <Text>User score: <b>{vote_average}</b></Text>\n                        <SubTitle>Overview</SubTitle>\n                        {overview!==''?(<Text>{overview}</Text>):(<Text>No overview</Text>)}\n                        <SubTitle>Genres</SubTitle>\n                    {genres ? (genres.map(genre => <GenresList key={genre.id}>{genre.name}</GenresList>)) : (<Text>No genre</Text>)}\n                    </FilmDescription>\n            </FilmContainer >\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string,\n        poster_path: PropTypes.string,\n        genres: PropTypes.array,\n        overview: PropTypes.string,\n        vote_average: PropTypes.number,\n    }).isRequired,\n    onBackClick:PropTypes.func.isRequired,\n}\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\"\nexport const Info = styled.div`\nmargin-top: 30px;\npadding: 15px;\nbox-shadow: 0px 0px 17px 0px rgba(255,185,43,0.66);\n`\nexport const Detail = styled(NavLink )`\ndisplay: block;\nfont-size:21px;\nfont-family: 'Permanent Marker', cursive;\nfont-weight:400;\ncolor: #fc7b03;\ntext-decoration:none;\n&:not(:last-child){\n    margin-bottom:10px;\n}\n  &.active {\n    font-size: 25px;\n    color: #ca7628;\n  }\n`\nexport const Title = styled.h2`\nfont-size:35px;\nfont-family: 'Permanent Marker', cursive;\nfont-weight:400;\ncolor: #fc7b03;\ntext-decoration:underline;\nmargin-top:0;\n`","import { Outlet} from \"react-router-dom\"\n\nimport { Info, Title, Detail } from \"./AdittionalInfo.styled\"\nexport const AdittionalInfo = () => {\n    return (\n            <Info>\n                <Title>Adittional information</Title>\n                <Detail to={\"cast\"}>Actors</Detail>\n                <Detail to={\"reviews\"}>Reviews</Detail>\n                <Outlet/>\n            </Info>\n    )\n}","\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useFetchMovie } from \"hooks/useFetchMovie\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Movie } from \"components/Movie/Movie\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { AdittionalInfo } from \"components/AdittionalInfo/AdittionalInfo\";\nexport default function MovieDetailsPage () {\n    const [movieLocation, setMovieLocation] = useState({});\n    const {movieId} =useParams()\n    const { movie, status } = useFetchMovie(movieId);\n    const location = useLocation();\n    const navigate = useNavigate();\n    \n    const onBackHandle = () => {\n    navigate(movieLocation)\n    }\n    useEffect(() => {\n    if(location.state) setMovieLocation(location.state.from)\n    }, [location.state])\n\n    return (\n     <>\n        {status === 'pending' && <Loader />}\n            {status === 'resolved' &&\n                <>\n                <Movie movie={movie} location={location} onBackClick={onBackHandle }/>\n                <AdittionalInfo/>\n                </>}\n        {status === 'rejected' && <h2>Sorry can't find this page</h2>}\n    </>  \n    \n\n\n    )\n}","import axios from \"axios\";\n\nexport const fetchMovies = async () => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data.results\n  } catch (error) {\n   console.log('error', error) \n  }\n}\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)\n  }\n}\n\nexport const fetchReviewsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\nexport const fetchCastsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\nexport const fetchMoviesByQuery = async (query) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=4a5a1e8e9c9af768c9d74bb009ae596f&query=${query}`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n// https://api.themoviedb.org/3/movie/550?api_key=4a5a1e8e9c9af768c9d74bb009ae596f","import { toast } from 'react-toastify';\nexport const notifi = (text) => toast.error(text, {\n    autoClose: 3000,\n});"],"names":["Image","styled","Loader","Status","Btn","GoBack","MdKeyboardReturn","FilmContainer","FilmDescription","Poster","Title","SubTitle","Text","GenresList","Movie","movie","onBackClick","title","poster_path","genres","overview","vote_average","type","onClick","src","alt","image","map","genre","name","id","Info","Detail","NavLink","AdittionalInfo","to","MovieDetailsPage","useState","movieLocation","setMovieLocation","setMovie","status","setStatus","useEffect","fetchMoviesById","console","log","message","notifi","fetch","useFetchMovie","useParams","movieId","location","useLocation","navigate","useNavigate","state","from","fetchMovies","axios","data","results","fetchReviewsById","fetchCastsById","fetchMoviesByQuery","query","text","toast","autoClose"],"sourceRoot":""}