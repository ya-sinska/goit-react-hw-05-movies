{"version":3,"file":"static/js/641.7a8359ed.chunk.js","mappings":"sLACaA,E,QAAeC,EAAAA,EAAH,iG,SCCZC,EAAiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7B,OACI,SAACH,EAAD,UACKG,M,wLCHAC,EAAOH,EAAAA,EAAAA,GAAH,gEAIJI,EAAOJ,EAAAA,EAAAA,GAAH,qPAYJK,EAAQL,EAAAA,EAAAA,EAAH,gFAKLM,GAAQN,EAAAA,EAAAA,GAAOO,EAAAA,IAAPP,CAAJ,4C,6BCnBJQ,EAAS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAErB,OADAC,EAAAA,GAAAA,WAAgC,MACxB,8BACgB,IAAnBD,EAAQE,QAAgB,SAACV,EAAA,EAAD,CAAgBC,KAAM,gBAAoB,SAACC,EAAD,UAC9DM,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACb,UAACV,EAAD,YACQ,UAACC,EAAD,YACI,SAACC,EAAD,IADJ,UAEYO,MAChB,uBAAIC,MAJGD,WCNR,SAASE,IACpB,IACMN,ECFqB,SAACO,GAC5B,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAeA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE8BC,EAAAA,EAAAA,IAAiBJ,GAF/C,OAEcP,EAFd,OAGQS,EAAWT,GAHnB,gDAMQY,QAAQC,IAAI,KAAMC,UAClBC,EAAAA,EAAAA,GAAO,KAAMD,SAPrB,0DADY,uBAAC,WAAD,wBAWZE,KACD,CAACT,IAEGP,EDdSiB,EADIC,EAAAA,EAAAA,MAAZC,SAGR,OACC,8BACKnB,IAAW,SAACD,EAAD,CAAQC,QAASA,Q,0MEPzBoB,EAAW,mCAAG,6GAEJC,IAAAA,IAAA,4FAFI,cAEjBC,EAFiB,yBAGhBA,EAAKA,KAAKC,SAHM,gCAKxBX,QAAQC,IAAI,QAAZ,MALwB,yDAAH,qDASXW,EAAe,mCAAG,WAAOjB,GAAP,gGAERc,IAAAA,IAAA,6CAAgDd,EAAhD,8CAFQ,cAErBe,EAFqB,yBAGpBA,EAAKA,MAHe,gCAK3BV,QAAQC,IAAI,QAAZ,MAL2B,yDAAH,sDASfF,EAAgB,mCAAG,WAAOJ,GAAP,gGAETc,IAAAA,IAAA,6CAAgDd,EAAhD,sDAFS,cAEtBe,EAFsB,yBAGrBA,EAAKA,KAAKC,SAHW,gCAK5BX,QAAQC,IAAI,QAAZ,MAL4B,yDAAH,sDAQhBY,EAAc,mCAAG,WAAOlB,GAAP,gGAEPc,IAAAA,IAAA,6CAAgDd,EAAhD,sDAFO,cAEpBe,EAFoB,yBAGnBA,EAAKA,MAHc,gCAK1BV,QAAQC,IAAI,QAAZ,MAL0B,yDAAH,sDASda,EAAkB,mCAAG,WAAOC,GAAP,gGAEXN,IAAAA,IAAA,mGAAsGM,IAF3F,cAExBL,EAFwB,yBAGvBA,EAAKA,KAAKC,SAHa,gCAK9BX,QAAQC,IAAI,QAAZ,MAL8B,yDAAH,uD,iECpClBE,EAAS,SAACtB,GAAD,OAAUmC,EAAAA,GAAAA,MAAYnC,EAAM,CAC9CoC,UAAW","sources":["components/NoFetchResults/NoTetchResults.styled.js","components/NoFetchResults/NoFetchResults.jsx","components/Review/Reviev.styled.js","components/Review/Reviev.jsx","pages/Reviews/Reviews.jsx","hooks/useFetchReviews.js","servises/moviesApi.js","servises/notify.js"],"sourcesContent":["import styled from \"@emotion/styled\"\nexport const Notification = styled.p`\nfont-size:18px;\nfont-weight:600;\nmargin-bottom:10px;\ncolor: #ca7628;\n`","import PropTypes from 'prop-types';\nimport { Notification } from \"./NoTetchResults.styled\"\nexport const NoFetchResults = ({ text }) => {\n    return (\n        <Notification>\n            {text}\n        </Notification>\n    )\n}\nNoFetchResults.propTypes = {\n    text: PropTypes.string,\n}","import styled from \"@emotion/styled\"\nimport{AiOutlineUser} from 'react-icons/ai'\nexport const List = styled.ul`\nlist-style-type: none;\npadding: 10px;\n`\nexport const Item = styled.li`\nfont-size:16px;\nfont-family: 'Work Sans', sans-serif;\nfont-weight:400;\ncolor: #ca7628;\nborder: 1px solid rgba(255,185,43,0.66);;\nborder-radius: 10px;\npadding: 20px;\n&:not(:last-child){\n    margin-bottom:15px;\n}\n`\nexport const Autor = styled.p`\nfont-size:18px;\nfont-weight:600;\nmargin-bottom:10px;\n`\nexport const Icon  = styled(AiOutlineUser)`\nmargin-right:10px;\n`\n","import PropTypes from 'prop-types';\nimport { List, Item, Autor, Icon } from \"./Reviev.styled\"\nimport * as Scroll from 'react-scroll';\nimport { NoFetchResults } from \"components/NoFetchResults/NoFetchResults\";\nexport const Review = ({ reviews }) => {\n    Scroll.animateScroll.scrollMore(500);\n    return (<>\n        {reviews.length === 0 ? (<NoFetchResults text={'No reviews'}/>) : (<List>\n            {reviews.map(({ author, content }) =>\n            <Item key={author}>\n                    <Autor>\n                        <Icon/>\n                        Autor: {author}</Autor>\n                <p>{content }</p>\n            </Item>)}\n    </List>)}\n    </>\n    )\n}\n\nReview.propTypes = {\n    reviews: PropTypes.array.isRequired,\n}","import { useParams } from \"react-router-dom\";\nimport { useFetchReviews } from \"hooks/useFetchReviews\";\nimport { Review } from \"components/Review/Reviev\";\nexport default function Reviews () {\n    const { movieId } = useParams();\n    const reviews = useFetchReviews(movieId);\n   \n    return (\n     <>\n        { reviews && <Review reviews={reviews }/>}\n    </>  \n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { fetchReviewsById} from \"servises/moviesApi\"\nimport { notifi } from \"servises/notify\";\nexport const useFetchReviews = (id) => {\n    const [reviews, setReviews] = useState([]);  \n    useEffect(() => {  \n        async function fetch() {\n            try {\n                const reviews = await fetchReviewsById(id);\n                setReviews(reviews);\n            }\n            catch (error) {\n                console.log(error.message);\n                notifi(error.message);\n            }\n        }\n        fetch();\n    }, [id]);\n\n    return reviews;\n};","import axios from \"axios\";\n\nexport const fetchMovies = async () => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data.results\n  } catch (error) {\n   console.log('error', error) \n  }\n}\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)\n  }\n}\n\nexport const fetchReviewsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\nexport const fetchCastsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\nexport const fetchMoviesByQuery = async (query) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=4a5a1e8e9c9af768c9d74bb009ae596f&query=${query}`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n// https://api.themoviedb.org/3/movie/550?api_key=4a5a1e8e9c9af768c9d74bb009ae596f","import { toast } from 'react-toastify';\nexport const notifi = (text) => toast.error(text, {\n    autoClose: 3000,\n});"],"names":["Notification","styled","NoFetchResults","text","List","Item","Autor","Icon","AiOutlineUser","Review","reviews","Scroll","length","map","author","content","Reviews","id","useState","setReviews","useEffect","fetchReviewsById","console","log","message","notifi","fetch","useFetchReviews","useParams","movieId","fetchMovies","axios","data","results","fetchMoviesById","fetchCastsById","fetchMoviesByQuery","query","toast","autoClose"],"sourceRoot":""}