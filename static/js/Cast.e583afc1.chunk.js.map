{"version":3,"file":"static/js/Cast.e583afc1.chunk.js","mappings":"0SACaA,EAAOC,EAAAA,EAAAA,GAAH,6LAQJC,EAAOD,EAAAA,EAAAA,GAAH,0HAMJE,EAAQF,EAAAA,EAAAA,IAAH,uCAGLG,EAAOH,EAAAA,EAAAA,EAAH,2E,6BCZJI,EAAS,SAAC,GAAa,IAAXC,EAAU,EAAVA,KAErB,OADAC,EAAAA,GAAAA,WAAgC,MAE5B,8BAEyB,IAArBD,EAAKA,KAAKE,QAAgB,SAACC,EAAA,EAAD,CAAgBC,KAAM,8BAC3C,SAACV,EAAD,UACIM,EAAKA,KAAKK,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAApB,OAAuC,UAACZ,EAAD,WACjDY,GAAgB,SAACX,EAAD,CAAOY,IAAG,UAThC,mCASgC,OAAkBD,GAAgBE,IAAKJ,KAAa,SAACT,EAAD,CAAOY,IAAG,UAAKE,GAASD,IAAI,eAC3G,SAACZ,EAAD,UAAOQ,KACP,uBAAIC,MAHyDD,WCVtE,SAASM,IACpB,IAEOZ,ECFiB,SAACa,GACzB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOd,EAAP,KAAae,EAAb,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BC,EAAAA,EAAAA,IAAeJ,GAF1C,OAEcb,EAFd,OAGQe,EAAQf,GAHhB,gDAMQkB,QAAQC,IAAI,KAAMC,UAClBC,EAAAA,EAAAA,GAAO,KAAMD,SAPrB,0DADY,uBAAC,WAAD,wBAWZE,KACD,CAACT,IACGb,EDbOuB,EAFGC,EAAAA,EAAAA,MAATC,KACaC,MAAM,cAAc,IAGzC,OAAQ,8BACP1B,IAAM,SAACD,EAAD,CAAQC,KAAMA","sources":["components/Actors/Actors.styled.js","components/Actors/Actors.jsx","pages/Cast/Cast.jsx","hooks/useFetchCast.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nexport const List = styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(6, 1fr);\ngrid-column-gap: 10px;\ngrid-row-gap: 1em;\nborder-top: 4px solid rgba(255,185,43,0.66);\npadding-top:10px;\n`\nexport const Item = styled.li`\nlist-style-type: none;\nfont-family: 'Work Sans', sans-serif;\nfont-weight:400;\ncolor: #ca7628;\n`\nexport const Image = styled.img`\nheight:250px;\n`\nexport const Name = styled.p`\nfont-weight:900;\nmargin:5px 0; \nfont-size:18px;\n`","import * as Scroll from 'react-scroll';\nimport PropTypes from 'prop-types';\nimport { List, Item, Name, Image } from \"./Actors.styled\";\nimport { NoFetchResults } from \"components/NoFetchResults/NoFetchResults\";\nimport image from \"../../Images/noPoster.jpg\"\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\nexport const Actors = ({ cast}) => {\n    Scroll.animateScroll.scrollMore(500);\n    return (\n        <>\n        {\n            cast.cast.length === 0 ? (<NoFetchResults text={'Sorry, no actors to show'}/>) :\n                (<List >\n                    {cast.cast.map(({ name, character, profile_path }) => <Item key={name}>\n                        {profile_path ? (<Image src={`${imgBaseUrl}${profile_path}`} alt={name} />) : (<Image src={`${image}`} alt='no poster' />)}\n                        <Name>{name}</Name>\n                        <p>{character}</p>\n                    </Item >)}\n                </List >)\n        }\n        </>  \n    )\n}\nActors.propTypes = {\n    cast: PropTypes.shape({\n    cast: PropTypes.array.isRequired,\n  })\n}","import { useParams } from \"react-router-dom\";\nimport { useFetchCast } from \"hooks/useFetchCast\";\nimport { Actors } from \"components/Actors/Actors\";\nexport default function Cast() {\n    const { slug } = useParams();\n    const movieId = slug.match(/[a-z0-9]+$/)[0];\n    const  cast = useFetchCast(movieId);\n   \n    return (<>\n    {cast&&<Actors cast={cast} />}\n    </>\n     \n    )\n}","import { useState, useEffect } from \"react\"\nimport { fetchCastsById } from \"servises/moviesApi\"\nimport { notifi } from \"servises/notify\";\n\nexport const useFetchCast = (id) => {\n    const [cast, setCast] = useState(null)\n    useEffect(() => {\n        async function fetch() {\n            try {\n                const cast = await fetchCastsById(id);\n                setCast(cast);\n            }\n            catch (error) {\n                console.log(error.message);\n                notifi(error.message);\n            }\n        }\n        fetch();\n    }, [id]);\n    return cast;\n};"],"names":["List","styled","Item","Image","Name","Actors","cast","Scroll","length","NoFetchResults","text","map","name","character","profile_path","src","alt","image","Cast","id","useState","setCast","useEffect","fetchCastsById","console","log","message","notifi","fetch","useFetchCast","useParams","slug","match"],"sourceRoot":""}