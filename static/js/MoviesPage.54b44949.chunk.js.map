{"version":3,"file":"static/js/MoviesPage.54b44949.chunk.js","mappings":"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","sources":["components/NoFetchResults/NoTetchResults.styled.js","components/NoFetchResults/NoFetchResults.jsx","components/TrendingFilms/FilmsList.styled.js","components/TrendingFilms/FilmsList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","hooks/useFetchMoviesByQuery.js","pages/MoviesPage/MoviesPage.jsx","servises/moviesApi.js","servises/notify.js"],"sourcesContent":["import styled from \"@emotion/styled\"\nexport const Notification = styled.p`\nfont-size:18px;\nfont-weight:600;\nmargin-bottom:10px;\ncolor: #ca7628;\n`","import PropTypes from 'prop-types';\nimport { Notification } from \"./NoTetchResults.styled\"\nexport const NoFetchResults = ({ text }) => {\n    return (\n        <Notification>\n            {text}\n        </Notification>\n    )\n}\nNoFetchResults.propTypes = {\n    text: PropTypes.string,\n}","import styled from \"@emotion/styled\";\nimport { Link} from \"react-router-dom\";\nexport const Container = styled.main`\ntext-align:center;\n`\nexport const Title = styled.h2`\nfont-size:35px;\nfont-family: 'Permanent Marker', cursive;\nfont-weight:400;\ncolor: #fc7b03;\n\n`\nexport const List = styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngrid-column-gap: 10px;\ngrid-row-gap: 1em;\n\n`\nexport const Links = styled(Link)`\ndisplay: flex;\nflex-direction:column;\nalign-items: center;\njustify-content:center;\ncolor: #e170a9;\nfont-size:24px;\ntext-decoration-line:none;\nfont-weight:600;\nbox-shadow: 0px 0px 23px 0px #FFA322;\n&:not(:last-child){\n    margin-bottom:15px;\n}\n&:hover{\n    text-decoration-line: underline;\n    color: #df1d7f;\n}\n`\nexport const Item = styled.li`\ndisplay: flex;\nflex-direction: column;\nfont-size:35px;\nfont-family: 'Dancing Script', cursive;\nfont-weight:400;\nlist-style:none;\n`\nexport const Poster = styled.div`\nwidth: 300px;\nheight: 450px;\nmargin-bottom:10px;\npadding-top: 10px;\n`\nexport const MoviesTitle = styled.p`\nheight: 60px;\npadding: 5px;\n`","import PropTypes from 'prop-types';\nimport { Container, List, Title, Poster, Item, Links, MoviesTitle } from \"./FilmsList.styled\";\nimport image from \"../../Images/noPoster.jpg\"\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\nexport const TrendingFilms = ({ movies, title, location, to }) => {\n    return (\n        <Container >\n            {title&&<Title>{title}</Title>}\n            <List>\n                {movies.map(movie => <Item key={movie.id}>\n                    <Links to={`${to}${movie.id}`} state={{from:location} }>\n                        <Poster>\n                            {movie.poster_path ? (<img src={`${imgBaseUrl}${movie.poster_path}`} alt={movie.title} />) :\n                            <img src={`${image}`} alt='no poster'/>} \n                        </Poster>\n                        <MoviesTitle>{movie.title}</MoviesTitle>\n                    </Links>\n                </Item> )}\n            </List>       \n        </Container >\n    )\n}\n\nTrendingFilms.propTypes = {\n    movies: PropTypes.array.isRequired,\n    title: PropTypes.string,\n    location:PropTypes.object.isRequired,\n    to:PropTypes.string,\n}","import styled from \"@emotion/styled\";\nimport { Form, Field } from \"formik\";\nimport { BiSearch } from 'react-icons/bi';\n\nexport const Searchfield = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n`\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff9e8;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 0px 17px 0px rgba(255,185,43,0.66);\n`\nexport const InputField = styled(Field)`\n   display: inline-block;\n   background-color: #fff9e8;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  color: #fc7b03;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n  font: inherit;\n  font-size: 18px;\n  color: #fc7b03;\n}\n   `\nexport const BtnSubmitForm = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  border-radius: 10px;\n  background-color: #f1ddd4;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover{\n      opacity: 1;\n  }`\n\nexport const Icon = styled(BiSearch)`\n  color: #fc7b03;\n  `","import { Formik} from 'formik';\nimport PropTypes from 'prop-types';\nimport { Searchfield, SearchForm, InputField, BtnSubmitForm, Icon} from './SearchBar.styled'\n\n\nconst initialValues = {\n    name: '',\n};\nexport const Searchbar = ({onSubmit}) => {\n    const handleSubmit = (values, { resetForm }) => {\n        onSubmit(values.name)\n        resetForm();\n    \n  };\n    return (\n        <Searchfield>\n        <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}>\n            <SearchForm autoComplete='off'>            \n                \n                    <BtnSubmitForm type=\"submit\">\n                        <Icon size=\"2em\"/>    \n                    </BtnSubmitForm>\n                \n                <InputField\n                    type=\"text\"\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search films\"\n                    />              \n            </SearchForm >\n            </Formik>\n        </Searchfield>\n    )\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import { useState, useEffect } from \"react\"\nimport { fetchMoviesByQuery } from \"servises/moviesApi\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { notifi } from \"servises/notify\";\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport const useFetchMoviesByQuery = () => {\n    const [movies, setMovies] = useState([])\n    const [status, setStatus] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams({});\n    const query = searchParams.get('query')??''\n    useEffect(() => {\n        if (query==='') {\n            return\n        }\n        async function fetch() {\n        try {\n                setStatus(Status.PENDING);\n                const movies = await fetchMoviesByQuery(query);\n            if (movies.length > 0) {\n                setMovies(movies);\n                setStatus(Status.RESOLVED);\n            }\n            else {\n                setStatus(Status.REJECTED);\n                notifi(`Movies ${query} didn't find`);\n        }}\n            catch (error) {\n                setStatus(Status.REJECTED);\n                console.log(error.message);\n                notifi(error.message);\n            }\n        }\n        fetch();\n    }, [query]);\n    const onInputChange = (value) => {\n        let query = value;\n            if (query) {\n              setSearchParams({ query });\n            } else {\n              setSearchParams({});\n            }\n        \n    }\n    return { movies, status, onInputChange};\n};","import { Searchbar } from \"components/SearchBar/SearchBar\"\nimport { useParams, Outlet, useLocation} from \"react-router-dom\"\nimport { TrendingFilms } from \"components/TrendingFilms/FilmsList\"\nimport { useFetchMoviesByQuery } from \"hooks/useFetchMoviesByQuery\"\nimport { Loader } from \"components/Loader/Loader\";\nimport { NoFetchResults } from \"components/NoFetchResults/NoFetchResults\";\nexport default function MoviesPage () {\n    const { movies, status, onInputChange} = useFetchMoviesByQuery();\n    const { movieId } = useParams();\n    const location = useLocation();\n    return (\n        <>\n            {!movieId &&\n                <>\n                <Searchbar onSubmit={onInputChange} />\n                {status === 'pending' && <Loader />}\n                {status === 'resolved' && <TrendingFilms movies={movies} location={location} to={''}/>}\n                {status === 'rejected' && <NoFetchResults text={\"Sorry can't find this page:(\"}/>}\n                </>  \n            }\n            <Outlet/>\n            \n        </>\n        \n    )\n}","import axios from \"axios\";\n\nexport const fetchMovies = async () => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data.results\n  } catch (error) {\n   console.log('error', error) \n  }\n}\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)\n  }\n}\n\nexport const fetchReviewsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\nexport const fetchCastsById = async (id) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=4a5a1e8e9c9af768c9d74bb009ae596f`);\n    return data.data\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n\nexport const fetchMoviesByQuery = async (query) => {\n  try {\n    const data = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=4a5a1e8e9c9af768c9d74bb009ae596f&query=${query}`);\n    return data.data.results\n  } catch (error) {\n    console.log('error', error)    \n  }\n}\n// https://api.themoviedb.org/3/movie/550?api_key=4a5a1e8e9c9af768c9d74bb009ae596f","import { toast } from 'react-toastify';\nexport const notifi = (text) => toast.error(text, {\n    autoClose: 3000,\n});"],"names":["Notification","styled","NoFetchResults","text","Container","Title","List","Links","Link","Item","Poster","MoviesTitle","TrendingFilms","movies","title","location","to","map","movie","id","state","from","poster_path","src","alt","image","Searchfield","SearchForm","Form","InputField","Field","BtnSubmitForm","Icon","BiSearch","initialValues","name","Searchbar","onSubmit","values","resetForm","autoComplete","type","size","autoFocus","placeholder","Status","MoviesPage","useState","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesByQuery","length","notifi","console","log","message","fetch","onInputChange","value","useFetchMoviesByQuery","movieId","useParams","useLocation","Loader","fetchMovies","axios","data","results","fetchMoviesById","fetchReviewsById","fetchCastsById","toast","autoClose"],"sourceRoot":""}